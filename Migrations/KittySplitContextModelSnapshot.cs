// <auto-generated />
using System;
using Kittysplit.DatabaseAbstraction;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kittysplit.Migrations
{
    [DbContext(typeof(KittySplitContext))]
    partial class KittySplitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("EventParticipant", b =>
                {
                    b.Property<int>("EventsEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParticipantsParticipantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventsEventId", "ParticipantsParticipantId");

                    b.HasIndex("ParticipantsParticipantId");

                    b.ToTable("EventParticipant");
                });

            modelBuilder.Entity("ExpenseParticipant", b =>
                {
                    b.Property<int>("ExpensesExpenseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParticipantsParticipantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExpensesExpenseId", "ParticipantsParticipantId");

                    b.HasIndex("ParticipantsParticipantId");

                    b.ToTable("ExpenseParticipant");
                });

            modelBuilder.Entity("Kittysplit.Logic.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Kittysplit.Logic.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateSpent")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExpenseAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpenseDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("ExpenseId");

                    b.HasIndex("EventId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Kittysplit.Logic.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ParticipantId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("EventParticipant", b =>
                {
                    b.HasOne("Kittysplit.Logic.Event", null)
                        .WithMany()
                        .HasForeignKey("EventsEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kittysplit.Logic.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpenseParticipant", b =>
                {
                    b.HasOne("Kittysplit.Logic.Expense", null)
                        .WithMany()
                        .HasForeignKey("ExpensesExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kittysplit.Logic.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kittysplit.Logic.Expense", b =>
                {
                    b.HasOne("Kittysplit.Logic.Event", null)
                        .WithMany("Expenses")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("Kittysplit.Logic.Event", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
